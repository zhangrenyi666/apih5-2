<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apih5.mybatis.dao.ZxSkStockTransItemSalesReturnMapper" >
  <resultMap id="BaseResultMap" type="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    <id column="zx_sk_StockTransItem_sales_return_id" property="zxSkStockTransItemSalesReturnId" jdbcType="VARCHAR" />
    <result column="billID" property="billID" jdbcType="VARCHAR" />
    <result column="resID" property="resID" jdbcType="VARCHAR" />
    <result column="batchNo" property="batchNo" jdbcType="VARCHAR" />
    <result column="resCode" property="resCode" jdbcType="VARCHAR" />
    <result column="resName" property="resName" jdbcType="VARCHAR" />
    <result column="spec" property="spec" jdbcType="VARCHAR" />
    <result column="resUnit" property="resUnit" jdbcType="VARCHAR" />
    <result column="stdPrice" property="stdPrice" jdbcType="DECIMAL" />
    <result column="inFee" property="inFee" jdbcType="DECIMAL" />
    <result column="inQty" property="inQty" jdbcType="DECIMAL" />
    <result column="inPrice" property="inPrice" jdbcType="DECIMAL" />
    <result column="inAmt" property="inAmt" jdbcType="DECIMAL" />
    <result column="muID" property="muID" jdbcType="VARCHAR" />
    <result column="workID" property="workID" jdbcType="VARCHAR" />
    <result column="muName" property="muName" jdbcType="VARCHAR" />
    <result column="workName" property="workName" jdbcType="VARCHAR" />
    <result column="outQty" property="outQty" jdbcType="DECIMAL" />
    <result column="outFee" property="outFee" jdbcType="DECIMAL" />
    <result column="outCostPrice" property="outCostPrice" jdbcType="DECIMAL" />
    <result column="outCostAmt" property="outCostAmt" jdbcType="DECIMAL" />
    <result column="outPrice" property="outPrice" jdbcType="DECIMAL" />
    <result column="outAmt" property="outAmt" jdbcType="DECIMAL" />
    <result column="isDepreciation" property="isDepreciation" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="resAllFee" property="resAllFee" jdbcType="DECIMAL" />
    <result column="itemID" property="itemID" jdbcType="VARCHAR" />
    <result column="inAmtAll" property="inAmtAll" jdbcType="DECIMAL" />
    <result column="inPriceNoTax" property="inPriceNoTax" jdbcType="DECIMAL" />
    <result column="resAllFeeNoTax" property="resAllFeeNoTax" jdbcType="DECIMAL" />
    <result column="resAllFeeTax" property="resAllFeeTax" jdbcType="DECIMAL" />
    <result column="ysFee" property="ysFee" jdbcType="DECIMAL" />
    <result column="inAmtTax" property="inAmtTax" jdbcType="DECIMAL" />
    <result column="mainIdAndItemId" property="mainIdAndItemId" jdbcType="VARCHAR" />
    <result column="settlementStatus" property="settlementStatus" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="CHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="CHAR" />
    <result column="modify_user_name" property="modifyUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    zx_sk_StockTransItem_sales_return_id, billID, resID, batchNo, resCode, 
    resName, spec, resUnit, stdPrice, inFee, 
    inQty, inPrice, inAmt, muID, workID, 
    muName, workName, outQty, outFee, outCostPrice, 
    outCostAmt, outPrice, outAmt, isDepreciation, remark, 
    resAllFee, itemID, inAmtAll, inPriceNoTax, resAllFeeNoTax, 
    resAllFeeTax, ysFee, inAmtTax, mainIdAndItemId, settlementStatus, 
    del_flag, create_time, create_user, create_user_name, modify_time, 
    modify_user, modify_user_name

  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from zx_sk_StockTransItem_sales_return
    where zx_sk_StockTransItem_sales_return_id = #{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from zx_sk_StockTransItem_sales_return
    where zx_sk_StockTransItem_sales_return_id = #{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    insert into zx_sk_StockTransItem_sales_return (zx_sk_StockTransItem_sales_return_id, billID, resID, 
      batchNo, resCode, resName, 
      spec, resUnit, stdPrice, 
      inFee, inQty, inPrice, 
      inAmt, muID, workID, 
      muName, workName, outQty, 
      outFee, outCostPrice, outCostAmt, 
      outPrice, outAmt, isDepreciation, 
      remark, resAllFee, itemID, 
      inAmtAll, inPriceNoTax, resAllFeeNoTax, 
      resAllFeeTax, ysFee, inAmtTax, 
      mainIdAndItemId, settlementStatus, del_flag, 
      create_time, create_user, create_user_name, 
      modify_time, modify_user, modify_user_name
      )
    values (#{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR}, #{billID,jdbcType=VARCHAR}, #{resID,jdbcType=VARCHAR}, 
      #{batchNo,jdbcType=VARCHAR}, #{resCode,jdbcType=VARCHAR}, #{resName,jdbcType=VARCHAR}, 
      #{spec,jdbcType=VARCHAR}, #{resUnit,jdbcType=VARCHAR}, #{stdPrice,jdbcType=DECIMAL}, 
      #{inFee,jdbcType=DECIMAL}, #{inQty,jdbcType=DECIMAL}, #{inPrice,jdbcType=DECIMAL}, 
      #{inAmt,jdbcType=DECIMAL}, #{muID,jdbcType=VARCHAR}, #{workID,jdbcType=VARCHAR}, 
      #{muName,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR}, #{outQty,jdbcType=DECIMAL}, 
      #{outFee,jdbcType=DECIMAL}, #{outCostPrice,jdbcType=DECIMAL}, #{outCostAmt,jdbcType=DECIMAL}, 
      #{outPrice,jdbcType=DECIMAL}, #{outAmt,jdbcType=DECIMAL}, #{isDepreciation,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{resAllFee,jdbcType=DECIMAL}, #{itemID,jdbcType=VARCHAR}, 
      #{inAmtAll,jdbcType=DECIMAL}, #{inPriceNoTax,jdbcType=DECIMAL}, #{resAllFeeNoTax,jdbcType=DECIMAL}, 
      #{resAllFeeTax,jdbcType=DECIMAL}, #{ysFee,jdbcType=DECIMAL}, #{inAmtTax,jdbcType=DECIMAL}, 
      #{mainIdAndItemId,jdbcType=VARCHAR}, #{settlementStatus,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=CHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=CHAR}, #{modifyUserName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    insert into zx_sk_StockTransItem_sales_return
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="zxSkStockTransItemSalesReturnId != null" >
        zx_sk_StockTransItem_sales_return_id,
      </if>
      <if test="billID != null" >
        billID,
      </if>
      <if test="resID != null" >
        resID,
      </if>
      <if test="batchNo != null" >
        batchNo,
      </if>
      <if test="resCode != null" >
        resCode,
      </if>
      <if test="resName != null" >
        resName,
      </if>
      <if test="spec != null" >
        spec,
      </if>
      <if test="resUnit != null" >
        resUnit,
      </if>
      <if test="stdPrice != null" >
        stdPrice,
      </if>
      <if test="inFee != null" >
        inFee,
      </if>
      <if test="inQty != null" >
        inQty,
      </if>
      <if test="inPrice != null" >
        inPrice,
      </if>
      <if test="inAmt != null" >
        inAmt,
      </if>
      <if test="muID != null" >
        muID,
      </if>
      <if test="workID != null" >
        workID,
      </if>
      <if test="muName != null" >
        muName,
      </if>
      <if test="workName != null" >
        workName,
      </if>
      <if test="outQty != null" >
        outQty,
      </if>
      <if test="outFee != null" >
        outFee,
      </if>
      <if test="outCostPrice != null" >
        outCostPrice,
      </if>
      <if test="outCostAmt != null" >
        outCostAmt,
      </if>
      <if test="outPrice != null" >
        outPrice,
      </if>
      <if test="outAmt != null" >
        outAmt,
      </if>
      <if test="isDepreciation != null" >
        isDepreciation,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="resAllFee != null" >
        resAllFee,
      </if>
      <if test="itemID != null" >
        itemID,
      </if>
      <if test="inAmtAll != null" >
        inAmtAll,
      </if>
      <if test="inPriceNoTax != null" >
        inPriceNoTax,
      </if>
      <if test="resAllFeeNoTax != null" >
        resAllFeeNoTax,
      </if>
      <if test="resAllFeeTax != null" >
        resAllFeeTax,
      </if>
      <if test="ysFee != null" >
        ysFee,
      </if>
      <if test="inAmtTax != null" >
        inAmtTax,
      </if>
      <if test="mainIdAndItemId != null" >
        mainIdAndItemId,
      </if>
      <if test="settlementStatus != null" >
        settlementStatus,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
      <if test="modifyUserName != null" >
        modify_user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="zxSkStockTransItemSalesReturnId != null" >
        #{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR},
      </if>
      <if test="billID != null" >
        #{billID,jdbcType=VARCHAR},
      </if>
      <if test="resID != null" >
        #{resID,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="resCode != null" >
        #{resCode,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        #{resName,jdbcType=VARCHAR},
      </if>
      <if test="spec != null" >
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="resUnit != null" >
        #{resUnit,jdbcType=VARCHAR},
      </if>
      <if test="stdPrice != null" >
        #{stdPrice,jdbcType=DECIMAL},
      </if>
      <if test="inFee != null" >
        #{inFee,jdbcType=DECIMAL},
      </if>
      <if test="inQty != null" >
        #{inQty,jdbcType=DECIMAL},
      </if>
      <if test="inPrice != null" >
        #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="inAmt != null" >
        #{inAmt,jdbcType=DECIMAL},
      </if>
      <if test="muID != null" >
        #{muID,jdbcType=VARCHAR},
      </if>
      <if test="workID != null" >
        #{workID,jdbcType=VARCHAR},
      </if>
      <if test="muName != null" >
        #{muName,jdbcType=VARCHAR},
      </if>
      <if test="workName != null" >
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="outQty != null" >
        #{outQty,jdbcType=DECIMAL},
      </if>
      <if test="outFee != null" >
        #{outFee,jdbcType=DECIMAL},
      </if>
      <if test="outCostPrice != null" >
        #{outCostPrice,jdbcType=DECIMAL},
      </if>
      <if test="outCostAmt != null" >
        #{outCostAmt,jdbcType=DECIMAL},
      </if>
      <if test="outPrice != null" >
        #{outPrice,jdbcType=DECIMAL},
      </if>
      <if test="outAmt != null" >
        #{outAmt,jdbcType=DECIMAL},
      </if>
      <if test="isDepreciation != null" >
        #{isDepreciation,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="resAllFee != null" >
        #{resAllFee,jdbcType=DECIMAL},
      </if>
      <if test="itemID != null" >
        #{itemID,jdbcType=VARCHAR},
      </if>
      <if test="inAmtAll != null" >
        #{inAmtAll,jdbcType=DECIMAL},
      </if>
      <if test="inPriceNoTax != null" >
        #{inPriceNoTax,jdbcType=DECIMAL},
      </if>
      <if test="resAllFeeNoTax != null" >
        #{resAllFeeNoTax,jdbcType=DECIMAL},
      </if>
      <if test="resAllFeeTax != null" >
        #{resAllFeeTax,jdbcType=DECIMAL},
      </if>
      <if test="ysFee != null" >
        #{ysFee,jdbcType=DECIMAL},
      </if>
      <if test="inAmtTax != null" >
        #{inAmtTax,jdbcType=DECIMAL},
      </if>
      <if test="mainIdAndItemId != null" >
        #{mainIdAndItemId,jdbcType=VARCHAR},
      </if>
      <if test="settlementStatus != null" >
        #{settlementStatus,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=CHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=CHAR},
      </if>
      <if test="modifyUserName != null" >
        #{modifyUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    update zx_sk_StockTransItem_sales_return
    <set >
      <if test="billID != null" >
        billID = #{billID,jdbcType=VARCHAR},
      </if>
      <if test="resID != null" >
        resID = #{resID,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        batchNo = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="resCode != null" >
        resCode = #{resCode,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        resName = #{resName,jdbcType=VARCHAR},
      </if>
      <if test="spec != null" >
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="resUnit != null" >
        resUnit = #{resUnit,jdbcType=VARCHAR},
      </if>
      <if test="stdPrice != null" >
        stdPrice = #{stdPrice,jdbcType=DECIMAL},
      </if>
      <if test="inFee != null" >
        inFee = #{inFee,jdbcType=DECIMAL},
      </if>
      <if test="inQty != null" >
        inQty = #{inQty,jdbcType=DECIMAL},
      </if>
      <if test="inPrice != null" >
        inPrice = #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="inAmt != null" >
        inAmt = #{inAmt,jdbcType=DECIMAL},
      </if>
      <if test="muID != null" >
        muID = #{muID,jdbcType=VARCHAR},
      </if>
      <if test="workID != null" >
        workID = #{workID,jdbcType=VARCHAR},
      </if>
      <if test="muName != null" >
        muName = #{muName,jdbcType=VARCHAR},
      </if>
      <if test="workName != null" >
        workName = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="outQty != null" >
        outQty = #{outQty,jdbcType=DECIMAL},
      </if>
      <if test="outFee != null" >
        outFee = #{outFee,jdbcType=DECIMAL},
      </if>
      <if test="outCostPrice != null" >
        outCostPrice = #{outCostPrice,jdbcType=DECIMAL},
      </if>
      <if test="outCostAmt != null" >
        outCostAmt = #{outCostAmt,jdbcType=DECIMAL},
      </if>
      <if test="outPrice != null" >
        outPrice = #{outPrice,jdbcType=DECIMAL},
      </if>
      <if test="outAmt != null" >
        outAmt = #{outAmt,jdbcType=DECIMAL},
      </if>
      <if test="isDepreciation != null" >
        isDepreciation = #{isDepreciation,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="resAllFee != null" >
        resAllFee = #{resAllFee,jdbcType=DECIMAL},
      </if>
      <if test="itemID != null" >
        itemID = #{itemID,jdbcType=VARCHAR},
      </if>
      <if test="inAmtAll != null" >
        inAmtAll = #{inAmtAll,jdbcType=DECIMAL},
      </if>
      <if test="inPriceNoTax != null" >
        inPriceNoTax = #{inPriceNoTax,jdbcType=DECIMAL},
      </if>
      <if test="resAllFeeNoTax != null" >
        resAllFeeNoTax = #{resAllFeeNoTax,jdbcType=DECIMAL},
      </if>
      <if test="resAllFeeTax != null" >
        resAllFeeTax = #{resAllFeeTax,jdbcType=DECIMAL},
      </if>
      <if test="ysFee != null" >
        ysFee = #{ysFee,jdbcType=DECIMAL},
      </if>
      <if test="inAmtTax != null" >
        inAmtTax = #{inAmtTax,jdbcType=DECIMAL},
      </if>
      <if test="mainIdAndItemId != null" >
        mainIdAndItemId = #{mainIdAndItemId,jdbcType=VARCHAR},
      </if>
      <if test="settlementStatus != null" >
        settlementStatus = #{settlementStatus,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=CHAR},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=CHAR},
      </if>
      <if test="modifyUserName != null" >
        modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where zx_sk_StockTransItem_sales_return_id = #{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    update zx_sk_StockTransItem_sales_return
    set       billID = #{billID,jdbcType=VARCHAR},
      resID = #{resID,jdbcType=VARCHAR},
      batchNo = #{batchNo,jdbcType=VARCHAR},
      resCode = #{resCode,jdbcType=VARCHAR},
      resName = #{resName,jdbcType=VARCHAR},
      spec = #{spec,jdbcType=VARCHAR},
      resUnit = #{resUnit,jdbcType=VARCHAR},
      stdPrice = #{stdPrice,jdbcType=DECIMAL},
      inFee = #{inFee,jdbcType=DECIMAL},
      inQty = #{inQty,jdbcType=DECIMAL},
      inPrice = #{inPrice,jdbcType=DECIMAL},
      inAmt = #{inAmt,jdbcType=DECIMAL},
      muID = #{muID,jdbcType=VARCHAR},
      workID = #{workID,jdbcType=VARCHAR},
      muName = #{muName,jdbcType=VARCHAR},
      workName = #{workName,jdbcType=VARCHAR},
      outQty = #{outQty,jdbcType=DECIMAL},
      outFee = #{outFee,jdbcType=DECIMAL},
      outCostPrice = #{outCostPrice,jdbcType=DECIMAL},
      outCostAmt = #{outCostAmt,jdbcType=DECIMAL},
      outPrice = #{outPrice,jdbcType=DECIMAL},
      outAmt = #{outAmt,jdbcType=DECIMAL},
      isDepreciation = #{isDepreciation,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      resAllFee = #{resAllFee,jdbcType=DECIMAL},
      itemID = #{itemID,jdbcType=VARCHAR},
      inAmtAll = #{inAmtAll,jdbcType=DECIMAL},
      inPriceNoTax = #{inPriceNoTax,jdbcType=DECIMAL},
      resAllFeeNoTax = #{resAllFeeNoTax,jdbcType=DECIMAL},
      resAllFeeTax = #{resAllFeeTax,jdbcType=DECIMAL},
      ysFee = #{ysFee,jdbcType=DECIMAL},
      inAmtTax = #{inAmtTax,jdbcType=DECIMAL},
      mainIdAndItemId = #{mainIdAndItemId,jdbcType=VARCHAR},
      settlementStatus = #{settlementStatus,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=CHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=CHAR},
      modify_user_name = #{modifyUserName,jdbcType=VARCHAR}
    where zx_sk_StockTransItem_sales_return_id = #{zxSkStockTransItemSalesReturnId,jdbcType=VARCHAR}
  </update>
  <select id="selectByZxSkStockTransItemSalesReturnList" resultMap="BaseResultMap" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    select 
    <include refid="Base_Column_List" />
    from zx_sk_StockTransItem_sales_return
    where del_flag = '0'
    <if test="zxSkStockTransItemSalesReturnId != null and zxSkStockTransItemSalesReturnId != ''" >
     and zx_sk_StockTransItem_sales_return_id = #{zxSkStockTransItemSalesReturnId,jdbcType=}
    </if>
    <if test="billID != null and billID != ''" >
     and billID = #{billID,jdbcType=VARCHAR}
    </if>
    <if test="resID != null and resID != ''" >
     and resID = #{resID,jdbcType=VARCHAR}
    </if>
    <if test="batchNo != null and batchNo != ''" >
     and batchNo = #{batchNo,jdbcType=VARCHAR}
    </if>
    <if test="resCode != null and resCode != ''" >
     and resCode = #{resCode,jdbcType=VARCHAR}
    </if>
    <if test="resName != null and resName != ''" >
     and resName = #{resName,jdbcType=VARCHAR}
    </if>
    <if test="spec != null and spec != ''" >
     and spec = #{spec,jdbcType=VARCHAR}
    </if>
    <if test="resUnit != null and resUnit != ''" >
     and resUnit = #{resUnit,jdbcType=VARCHAR}
    </if>
    <if test="stdPrice != null and stdPrice != ''" >
     and stdPrice = #{stdPrice,jdbcType=DECIMAL}
    </if>
    <if test="inFee != null and inFee != ''" >
     and inFee = #{inFee,jdbcType=DECIMAL}
    </if>
    <if test="inQty != null and inQty != ''" >
     and inQty = #{inQty,jdbcType=DECIMAL}
    </if>
    <if test="inPrice != null and inPrice != ''" >
     and inPrice = #{inPrice,jdbcType=DECIMAL}
    </if>
    <if test="inAmt != null and inAmt != ''" >
     and inAmt = #{inAmt,jdbcType=DECIMAL}
    </if>
    <if test="muID != null and muID != ''" >
     and muID = #{muID,jdbcType=VARCHAR}
    </if>
    <if test="workID != null and workID != ''" >
     and workID = #{workID,jdbcType=VARCHAR}
    </if>
    <if test="muName != null and muName != ''" >
     and muName = #{muName,jdbcType=VARCHAR}
    </if>
    <if test="workName != null and workName != ''" >
     and workName = #{workName,jdbcType=VARCHAR}
    </if>
    <if test="outQty != null and outQty != ''" >
     and outQty = #{outQty,jdbcType=DECIMAL}
    </if>
    <if test="outFee != null and outFee != ''" >
     and outFee = #{outFee,jdbcType=DECIMAL}
    </if>
    <if test="outCostPrice != null and outCostPrice != ''" >
     and outCostPrice = #{outCostPrice,jdbcType=DECIMAL}
    </if>
    <if test="outCostAmt != null and outCostAmt != ''" >
     and outCostAmt = #{outCostAmt,jdbcType=DECIMAL}
    </if>
    <if test="outPrice != null and outPrice != ''" >
     and outPrice = #{outPrice,jdbcType=DECIMAL}
    </if>
    <if test="outAmt != null and outAmt != ''" >
     and outAmt = #{outAmt,jdbcType=DECIMAL}
    </if>
    <if test="isDepreciation != null and isDepreciation != ''" >
     and isDepreciation = #{isDepreciation,jdbcType=INTEGER}
    </if>
    <if test="remark != null and remark != ''" >
     and remark = #{remark,jdbcType=VARCHAR}
    </if>
    <if test="resAllFee != null and resAllFee != ''" >
     and resAllFee = #{resAllFee,jdbcType=DECIMAL}
    </if>
    <if test="itemID != null and itemID != ''" >
     and itemID = #{itemID,jdbcType=VARCHAR}
    </if>
    <if test="inAmtAll != null and inAmtAll != ''" >
     and inAmtAll = #{inAmtAll,jdbcType=DECIMAL}
    </if>
    <if test="inPriceNoTax != null and inPriceNoTax != ''" >
     and inPriceNoTax = #{inPriceNoTax,jdbcType=DECIMAL}
    </if>
    <if test="resAllFeeNoTax != null and resAllFeeNoTax != ''" >
     and resAllFeeNoTax = #{resAllFeeNoTax,jdbcType=DECIMAL}
    </if>
    <if test="resAllFeeTax != null and resAllFeeTax != ''" >
     and resAllFeeTax = #{resAllFeeTax,jdbcType=DECIMAL}
    </if>
    <if test="ysFee != null and ysFee != ''" >
     and ysFee = #{ysFee,jdbcType=DECIMAL}
    </if>
    <if test="inAmtTax != null and inAmtTax != ''" >
     and inAmtTax = #{inAmtTax,jdbcType=DECIMAL}
    </if>
    <if test="mainIdAndItemId != null and mainIdAndItemId != ''" >
     and mainIdAndItemId = #{mainIdAndItemId,jdbcType=VARCHAR}
    </if>
    <if test="settlementStatus != null and settlementStatus != ''" >
     and settlementStatus = #{settlementStatus,jdbcType=VARCHAR}
    </if>
    <if test="createUserName != null and createUserName != ''" >
     and create_user_name = #{createUserName,jdbcType=VARCHAR}
    </if>
    <if test="modifyUserName != null and modifyUserName != ''" >
     and modify_user_name = #{modifyUserName,jdbcType=VARCHAR}
    </if>
    ORDER BY modify_time DESC 
  </select>
  <delete id="batchDeleteUpdateZxSkStockTransItemSalesReturn" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" >
    <![CDATA[ 
        update zx_sk_StockTransItem_sales_return
        set del_flag = '1',
            modify_time=#{param2.modifyTime,jdbcType=TIMESTAMP},
            modify_user=#{param2.modifyUser},
            modify_user_name=#{param2.modifyUserName}
        where del_flag = '0' and zx_sk_StockTransItem_sales_return_id in 
     ]]> 
     <foreach collection="param1" item = "model" open="(" separator="," close=")">#{model.zxSkStockTransItemSalesReturnId} 
     </foreach>
  </delete>


  <select id="selectByZxSkStockTransItemSalesReturnListMinNumber" resultType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn" parameterType="com.apih5.mybatis.pojo.ZxSkStockTransItemSalesReturn">
    SELECT
      *
      FROM zx_sk_StockTransItem_sales_return AS salesReturn
    LEFT JOIN (
        SELECT
          a.mainIdAndItemId,
          a.resID,
          min( CASE WHEN a.isOutNumber &lt; b.isOutNumber THEN a.isOutNumber ELSE b.isOutNumber END ) AS isOutNumber
        FROM
          (
            SELECT
              CONCAT( receiptFer.id, CONCAT( "-", receiptItem.id ) ) AS mainIdAndItemId,
              resID,
              inPrice,
              isOutNumber
            FROM zx_sk_stockTransfer_Initial_receipt AS receiptFer
              LEFT JOIN zx_sk_stockTransItem_Initial_receipt AS receiptItem
                ON receiptFer.id = receiptItem.billID
            WHERE receiptFer.del_flag = '0'
              AND receiptItem.del_flag = '0'
              AND receiptFer.billStatus = '1'
              AND receiptItem.id IN (
                SELECT
                  subString( mainIdAndItemId, LOCATE( '-', mainIdAndItemId ) + 1, length( mainIdAndItemId ) )
                FROM
                  zx_sk_StockTransItem_sales_return
                WHERE del_flag = '0'
                  AND billID = #{billID}
              )
    UNION
        SELECT
          a.mainIdAndItemId,
          a.resID,
          a.inPrice,
          a.isOutNumber
        FROM(
          SELECT
            CONCAT( receivingFer.id, CONCAT( "-", receivingItem.id ) ) AS mainIdAndItemId,
            receivingItem.resID,
            receivingItem.inPrice,
            receivingItem.isOutNumber - if(invoiceItem.qty,invoiceItem.qty,0) as isOutNumber
          FROM zx_sk_stockTransfer_receiving AS receivingFer
            LEFT JOIN zx_sk_stockTransItem_receiving AS receivingItem
              ON receivingFer.id = receivingItem.billID
                left join (
                  select
                    invoiceItem.qty,
                    invoiceItem.stockTransItemID
                  from zx_sk_invoice as invoice
                    left join zx_sk_invoiceitem as invoiceItem
                      on invoice.id = invoiceItem.invoiceID
                  where invoice.del_flag = '0'
                    and invoiceItem.del_flag = '0'
                    and invoice.billStatus = '1'
                ) as invoiceItem
                  on receivingItem.id = invoiceItem.stockTransItemID
        WHERE receivingFer.del_flag = '0'
          AND receivingItem.del_flag = '0'
          AND receivingFer.billStatus = '1'
          AND isOutNumber > 0
          AND receivingItem.id IN (
        SELECT
            subString( mainIdAndItemId, LOCATE( '-', mainIdAndItemId ) + 1, length( mainIdAndItemId ) )
            FROM zx_sk_StockTransItem_sales_return
            WHERE del_flag = '0' AND billID = #{billID}
        )
      ) AS a
    ) AS a
    LEFT JOIN ( SELECT resID, stockQty AS isOutNumber FROM zx_sk_stock WHERE del_flag = '0' ) AS b ON a.resID = b.resID
      GROUP BY mainIdAndItemId
    ) AS b
        ON salesReturn.mainIdAndItemId = b.mainIdAndItemId
      WHERE del_flag = '0' and salesReturn.billID = #{billID}
  </select>

  <update id="updateSettlementStatusByPrimaryKey" parameterType="java.lang.String" >
    update zx_sk_stocktransitem_sales_return
      set settlementStatus = '1'
      where del_flag = '0' and zx_sk_StockTransItem_sales_return_id = #{id}
  </update>
</mapper>
